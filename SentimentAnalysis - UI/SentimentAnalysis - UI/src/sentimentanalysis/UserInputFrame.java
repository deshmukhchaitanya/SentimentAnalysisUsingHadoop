/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sentimentanalysis;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import javax.swing.JOptionPane;

public class UserInputFrame extends javax.swing.JFrame {

    /**
     * Creates new form UserInputFrame
     */
    public UserInputFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headerBodyPanel = new javax.swing.JPanel();
        headerTextField = new javax.swing.JLabel();
        mainBodyPanel = new javax.swing.JPanel();
        inputTextField = new javax.swing.JTextField();
        performAnalysisBtn = new javax.swing.JButton();
        closeBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        headerTextField.setFont(new java.awt.Font("URW Chancery L", 3, 48)); // NOI18N
        headerTextField.setForeground(new java.awt.Color(50, 20, 160));
        headerTextField.setText("Sentiment Analysis");

        javax.swing.GroupLayout headerBodyPanelLayout = new javax.swing.GroupLayout(headerBodyPanel);
        headerBodyPanel.setLayout(headerBodyPanelLayout);
        headerBodyPanelLayout.setHorizontalGroup(
            headerBodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerBodyPanelLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(headerTextField)
                .addContainerGap(137, Short.MAX_VALUE))
        );
        headerBodyPanelLayout.setVerticalGroup(
            headerBodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerBodyPanelLayout.createSequentialGroup()
                .addComponent(headerTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        inputTextField.setFont(new java.awt.Font("WenQuanYi Micro Hei", 0, 15)); // NOI18N
        inputTextField.setForeground(new java.awt.Color(105, 105, 105));
        inputTextField.setText("Enter the Topic to be searched");
        inputTextField.setToolTipText("Maximum Lnegth of Tweet : 15 characters");

        performAnalysisBtn.setText("Perform Analysis");
        performAnalysisBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                performAnalysisBtnActionPerformed(evt);
            }
        });

        closeBtn.setText("Close");
        closeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainBodyPanelLayout = new javax.swing.GroupLayout(mainBodyPanel);
        mainBodyPanel.setLayout(mainBodyPanelLayout);
        mainBodyPanelLayout.setHorizontalGroup(
            mainBodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainBodyPanelLayout.createSequentialGroup()
                .addGroup(mainBodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainBodyPanelLayout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(inputTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mainBodyPanelLayout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addComponent(performAnalysisBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71)
                        .addComponent(closeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(84, Short.MAX_VALUE))
        );
        mainBodyPanelLayout.setVerticalGroup(
            mainBodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainBodyPanelLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(inputTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71)
                .addGroup(mainBodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(performAnalysisBtn)
                    .addComponent(closeBtn))
                .addContainerGap(117, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(headerBodyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(mainBodyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headerBodyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainBodyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtnActionPerformed
        this.dispose();
    }//GEN-LAST:event_closeBtnActionPerformed

    private void performAnalysisBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_performAnalysisBtnActionPerformed
        String inputText = inputTextField.getText();
        
        // Error Check
        if(inputText.trim().isEmpty() || inputText.length() > 15){
            JOptionPane.showMessageDialog(this,
            "Input cannot be Empty or greater than 15 characters",
            "Incorrect Input Format", JOptionPane.ERROR_MESSAGE);
        }else{
            // Correct Input
            executeShellScript(inputText);
        }
    }//GEN-LAST:event_performAnalysisBtnActionPerformed

    
    /**
     * Excute Shell script
     */
    
    private void executeShellScript(String input){
        Process p;
        try {
            Runtime r = Runtime.getRuntime();
            String execMRJob = "/usr/local/hadoop/bin/hadoop jar lib/Sentiment_Hadoop_Job.jar /usr/sentiment/ " + input +" > $1";
            String getJobSummary = "/usr/local/hadoop/bin/hadoop fs -get /user/ubuntu/output2/part-00000 SentiResult.txt";
            
            // Execute Map Reduce Job
            System.out.println("MapReduce jobs Submitted.");
            p = r.exec(execMRJob);
            p.waitFor();
            BufferedReader reader1 = 
                  new BufferedReader(new InputStreamReader(p.getInputStream()));

            String line = "";			
            while ((line = reader1.readLine())!= null) {
            //      System.out.println("Received from terminal :: " + line);
            }
            System.out.println("MapReduce Job Completed !!! :)");
            
            // Retrieve the output file from HDFS to local filesystem
            while(true){
                try{
                    p = Runtime.getRuntime().exec(getJobSummary);
                    break;
                }catch(Exception e){
                    Thread.currentThread().sleep(1000);
                    continue;
                }
            }

            BufferedReader reader = 
                new BufferedReader(new InputStreamReader(p.getInputStream()));

            line = "";			
            while ((line = reader.readLine())!= null) {
                  System.out.println("Received from terminal :: " + line);
            }
            
            new CreateJsonObj().readJobSummary("SentimentResult.txt");
            

            line = "";			
            while ((line = reader.readLine())!= null) {
                  System.out.println("Received from terminal :: " + line);
            }
 
             String openSummary = "firefox result.html";
             
             p = Runtime.getRuntime().exec(openSummary);
             
             //Thread.currentThread().stop();
             this.dispose();
            
        } catch (Exception e) {
                e.printStackTrace();
                this.dispose();
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserInputFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserInputFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserInputFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserInputFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserInputFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeBtn;
    private javax.swing.JPanel headerBodyPanel;
    private javax.swing.JLabel headerTextField;
    private javax.swing.JTextField inputTextField;
    private javax.swing.JPanel mainBodyPanel;
    private javax.swing.JButton performAnalysisBtn;
    // End of variables declaration//GEN-END:variables
}
